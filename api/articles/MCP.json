{"title":"MCP","uid":"0cec45348c42060a94488bf44a5c4b6b","slug":"MCP","date":"2025-08-28T06:21:20.000Z","updated":"2025-09-07T11:02:28.410Z","comments":true,"path":"api/articles/MCP.json","keywords":"AI、Python","cover":[],"content":"<h1 id=\"MCP\"><a href=\"#MCP\" class=\"headerlink\" title=\"MCP\"></a>MCP</h1><h1 id=\"Function-call\"><a href=\"#Function-call\" class=\"headerlink\" title=\"Function call\"></a>Function call</h1><table>\n<thead>\n<tr>\n<th>维度</th>\n<th>Function Calling（FC）</th>\n<th>MCP（Model Context Protocol）</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>本质</td>\n<td><strong>能力</strong> —— 某个大模型原生就带的一种「调用函数」功能</td>\n<td><strong>协议</strong> —— 定义 AI 与外部世界如何长期、标准、可复用地交互</td>\n</tr>\n<tr>\n<td>工作方式</td>\n<td>模型在一次推理里<strong>主动</strong>决定要调用哪个函数，并吐出结构化参数</td>\n<td>通过「客户端 - 服务器」架构，由 MCP Server <strong>被动</strong>等待模型或 Agent 的请求</td>\n</tr>\n<tr>\n<td>是否标准化</td>\n<td>否。OpenAI、Anthropic、百度等各家接口格式不同</td>\n<td>是。统一 JSON-RPC 2.0 协议，跨模型通用</td>\n</tr>\n<tr>\n<td>上下文管理</td>\n<td>单次调用，无状态；复杂多轮任务需自己维护</td>\n<td>协议层面支持会话、状态、长链路任务</td>\n</tr>\n<tr>\n<td>复用 &#x2F; 共享</td>\n<td>函数代码往往紧耦合在项目里，换模型就得重写</td>\n<td>一次写成 MCP Server，可被任何支持 MCP 的模型 &#x2F; IDE&#x2F;Agent 直接插用</td>\n</tr>\n</tbody></table>\n<h1 id=\"MCP介绍\"><a href=\"#MCP介绍\" class=\"headerlink\" title=\"MCP介绍\"></a>MCP介绍</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>简单来说 MCP就是让大模型使用各类工具的协议</p>\n<p>MCP &#x3D; 双方交流的“共同语言&#x2F;协议”     指的就是环境 环境就是指周围有哪些函数可以用来调用  从而获取到外界的信息 比如获取天气信息 网络信息等等 MCP就是让模型感知上下文的协议 简称模型上下文协议 </p></blockquote>\n<p><strong>MCP server</strong>：其实就是一个「写好的工具&#x2F;程序」，通常是一个 NPM 包或者脚本。</p>\n<p><strong>MCP client</strong>（比如 IDE 插件、AI 助手）：它不会自己实现功能，而是通过 <strong>启动你本地的 MCP server</strong> 来获得能力。</p>\n<p><strong>执行方式</strong>：server 就是一个本地进程，本质就是运行命令（<code>node</code>、<code>python</code>、<code>npx</code> 等等），然后通过 <strong>标准输入&#x2F;输出 (stdin&#x2F;stdout)</strong> 用 MCP 协议通信。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>MCP server 不是远程服务，而是本地执行的工具，只是用 MCP 协议标准化了“如何跟这些工具说话”。</p>\n<p>MCP  Server是一个程序 程序的执行符合MCP协议</p>\n<p>npx：临时拉取 npm 包到本地缓存 → 执行 → 不会马上删，但缓存会管理。</p></blockquote>\n<img src=\"/post/MCP/d891d54c6520407788add7e49228acf3.png\" class=\"\" title=\"在这里插入图片描述\">\n\n<p>如果同时配置了多个MCP服务，比如百度地图、Unity、Blender等。每个MCP服务需要对应Host中的一个Client来一对一通信。Client被包含在Host中。</p>\n<img src=\"/post/MCP/4ab0e06f929745048b179d71fcfd9b56.png\" class=\"\" title=\"在这里插入图片描述\">\n\n<p>每个支持MCP的软件，都有一个MCP Server文件，里面列出了所有支持调用的函数，函数注释里的内容是给AI看的，告诉AI这个函数是做什么用的。<br><code>MCP Server文件就是给AI看的工具说明书。</code></p>\n<h1 id=\"MCP交互过程\"><a href=\"#MCP交互过程\" class=\"headerlink\" title=\"MCP交互过程\"></a>MCP交互过程</h1><p>MCP交互过程如下：</p>\n<p>①cline与MCP server 进行寒暄    寒暄结束后，cline就知道MCP server中有哪些工具</p>\n<p>②用户提出问题后  cline接收到问题  将问题与注册好的MCP server 以及server中的工具列表 告诉给模型 </p>\n<p>③模型无法回答当前问题  但是MCP中有相应的工具可以调用 于是告诉cline 想调用MCP中的工具</p>\n<p>④cline接受到请求后  就跟对应的MCP server沟通  对应的MCP server 接收到请求后 调用对应的工具 返回相关的结果</p>\n<p>然后MCP server 将结果返回给 cline cline传给大模型</p>\n<p>⑤模型接收到回答后，将结果返回为cline，cline再将结果返回给用户</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>MCP 过程的交互只涉及MCP Server 和cline的交互  不涉及跟大模型之间的交互  MCP没有规定如何与模型进行交互</p>\n<p>MCP协议主要规定了  ①每个MCP  Server 有哪些函数可以用  ②如何调用这些函数 总结为函数的注册和使用</p></blockquote>\n<img src=\"/post/MCP/QQ_1757227390364.png\" class=\"\" title=\"img\">\n\n<h1 id=\"MCP-的本质\"><a href=\"#MCP-的本质\" class=\"headerlink\" title=\"MCP 的本质\"></a>MCP 的本质</h1><p>MCP 就是host 和 MCP server交互的格式  (json格式)  这样不使用host 在命令行启动MCP server 输入相关的格式 就可以与MCP server进行通信</p>\n<img src=\"/post/MCP/image-20250727154739013.png\" class=\"\" title=\"image-20250727154739013\">\n\n\n\n<p>MCP &#x3D; 一种「通信协议  + 本地扩展机制」。</p>\n<p>MCP server &#x3D; 各种各样的工具（新闻抓取、数据库查询、命令行工具…）。</p>\n<p>MCP client &#x3D; 统一的入口，把不同的工具“挂载”到 AI 或 IDE 里用。</p>\n<h1 id=\"MCP-三种传输协议\"><a href=\"#MCP-三种传输协议\" class=\"headerlink\" title=\"MCP 三种传输协议\"></a>MCP 三种传输协议</h1><table>\n<thead>\n<tr>\n<th>协议名称</th>\n<th>通信方式</th>\n<th>适用场景</th>\n<th>优势</th>\n<th>局限</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>Stdio</strong>（标准输入输出）</td>\n<td>使用进程的标准输入（stdin）和标准输出（stdout）进行本地通信，基于 JSON-RPC 2.0 格式</td>\n<td>本地开发、调试、IDE 插件、命令行工具</td>\n<td>简单易实现、跨平台、低延迟</td>\n<td>仅支持本地通信，无法跨网络，低并发</td>\n</tr>\n<tr>\n<td><strong>SSE</strong>（Server-Sent Events）</td>\n<td>客户端通过 HTTP POST 发送请求，服务器通过 SSE 单向推送流式响应</td>\n<td>实时监控、新闻推送、远程服务调用</td>\n<td>基于 HTTP，浏览器友好，支持流式数据</td>\n<td>仅支持单向通信，MCP 官方已标记为 “即将废弃”</td>\n</tr>\n<tr>\n<td><strong>Streamable HTTP</strong>（新型流式 HTTP）</td>\n<td>支持双向流式通信的现代 HTTP 协议，替代 SSE，支持会话恢复、OAuth 认证等</td>\n<td>分布式系统、高并发、双向实时交互</td>\n<td>双向通信、高性能、企业级安全机制</td>\n<td>实现较复杂，生态仍在发展中</td>\n</tr>\n</tbody></table>\n<h1 id=\"创建一个MCP-server\"><a href=\"#创建一个MCP-server\" class=\"headerlink\" title=\"创建一个MCP server\"></a>创建一个MCP server</h1><h2 id=\"初始化项目\"><a href=\"#初始化项目\" class=\"headerlink\" title=\"初始化项目\"></a>初始化项目</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>uv init weather</p>\n<p>#进入weather执行如下命令</p>\n<p>uv sync</p>\n<p>.venv\\Scripts\\activate.bat</p>\n<p>#添加依赖<br>uv add “mcp[cli]” httpx</p></blockquote>\n<h2 id=\"建立-weather-py\"><a href=\"#建立-weather-py\" class=\"headerlink\" title=\"建立 weather.py\"></a>建立 weather.py</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入类型提示模块，用于类型注解</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> typing <span class=\"keyword\">import</span> <span class=\"type\">Any</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入httpx库，用于发送HTTP请求</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> httpx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从mcp.server.fastmcp模块导入FastMCP类</span></span><br><span class=\"line\"><span class=\"comment\"># FastMCP是一个快速构建MCP（Model Control Protocol）服务器的框架</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> mcp.server.fastmcp <span class=\"keyword\">import</span> FastMCP</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建FastMCP实例，命名为&quot;weather&quot;，日志级别设置为ERROR（只显示错误信息）</span></span><br><span class=\"line\">mcp = FastMCP(<span class=\"string\">&quot;weather&quot;</span>, log_level=<span class=\"string\">&quot;ERROR&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 常量定义</span></span><br><span class=\"line\"><span class=\"comment\"># NWS（National Weather Service）API的基础URL</span></span><br><span class=\"line\">NWS_API_BASE = <span class=\"string\">&quot;https://api.weather.gov&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 用户代理字符串，用于标识应用程序</span></span><br><span class=\"line\">USER_AGENT = <span class=\"string\">&quot;weather-app/1.0&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">make_nws_request</span>(<span class=\"params\">url: <span class=\"built_in\">str</span></span>) -&gt; <span class=\"built_in\">dict</span>[<span class=\"built_in\">str</span>, <span class=\"type\">Any</span>] | <span class=\"literal\">None</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;向NWS API发起请求并处理错误。</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        url: 要请求的API URL</span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        成功时返回解析后的JSON数据字典，失败时返回None</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 设置请求头信息</span></span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;User-Agent&quot;</span>: USER_AGENT,           <span class=\"comment\"># 用户代理标识</span></span><br><span class=\"line\">        <span class=\"string\">&quot;Accept&quot;</span>: <span class=\"string\">&quot;application/geo+json&quot;</span>    <span class=\"comment\"># 接受的数据格式</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 创建异步HTTP客户端</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">with</span> httpx.AsyncClient() <span class=\"keyword\">as</span> client:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 发起GET请求，设置超时时间为30秒</span></span><br><span class=\"line\">            response = <span class=\"keyword\">await</span> client.get(url, headers=headers, timeout=<span class=\"number\">30.0</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 如果响应状态码不是2xx，抛出异常</span></span><br><span class=\"line\">            response.raise_for_status()</span><br><span class=\"line\">            <span class=\"comment\"># 返回解析后的JSON数据</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> response.json()</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">            <span class=\"comment\"># 捕获所有异常，返回None表示请求失败</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">format_alert</span>(<span class=\"params\">feature: <span class=\"built_in\">dict</span></span>) -&gt; <span class=\"built_in\">str</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;将警报数据格式化为可读的字符串。</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        feature: 包含警报信息的字典</span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        格式化后的警报字符串</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 获取警报属性</span></span><br><span class=\"line\">    props = feature[<span class=\"string\">&quot;properties&quot;</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 格式化警报信息，使用get方法提供默认值防止键不存在</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">事件: <span class=\"subst\">&#123;props.get(<span class=\"string\">&#x27;event&#x27;</span>, <span class=\"string\">&#x27;未知&#x27;</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">区域: <span class=\"subst\">&#123;props.get(<span class=\"string\">&#x27;areaDesc&#x27;</span>, <span class=\"string\">&#x27;未知&#x27;</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">严重程度: <span class=\"subst\">&#123;props.get(<span class=\"string\">&#x27;severity&#x27;</span>, <span class=\"string\">&#x27;未知&#x27;</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">描述: <span class=\"subst\">&#123;props.get(<span class=\"string\">&#x27;description&#x27;</span>, <span class=\"string\">&#x27;无描述信息&#x27;</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">指示: <span class=\"subst\">&#123;props.get(<span class=\"string\">&#x27;instruction&#x27;</span>, <span class=\"string\">&#x27;无具体指示&#x27;</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用@mcp.tool()装饰器将函数注册为MCP工具</span></span><br><span class=\"line\"><span class=\"meta\">@mcp.tool()</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">get_alerts</span>(<span class=\"params\">state: <span class=\"built_in\">str</span></span>) -&gt; <span class=\"built_in\">str</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;获取指定美国州的天气警报。</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        state: 两个字母的美国州代码（例如：CA, NY）</span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        格式化后的警报信息字符串</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 构建获取州警报的URL</span></span><br><span class=\"line\">    url = <span class=\"string\">f&quot;<span class=\"subst\">&#123;NWS_API_BASE&#125;</span>/alerts/active/area/<span class=\"subst\">&#123;state&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 发起API请求获取数据</span></span><br><span class=\"line\">    data = <span class=\"keyword\">await</span> make_nws_request(url)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 检查数据是否有效</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data <span class=\"keyword\">or</span> <span class=\"string\">&quot;features&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;无法获取警报或未找到警报。&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 检查是否有警报</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data[<span class=\"string\">&quot;features&quot;</span>]:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;该州无活动警报。&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 格式化所有警报</span></span><br><span class=\"line\">    alerts = [format_alert(feature) <span class=\"keyword\">for</span> feature <span class=\"keyword\">in</span> data[<span class=\"string\">&quot;features&quot;</span>]]</span><br><span class=\"line\">    <span class=\"comment\"># 用分隔符连接所有警报</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;\\n---\\n&quot;</span>.join(alerts)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注册为MCP工具的天气预报函数</span></span><br><span class=\"line\"><span class=\"meta\">@mcp.tool()</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">get_forecast</span>(<span class=\"params\">latitude: <span class=\"built_in\">float</span>, longitude: <span class=\"built_in\">float</span></span>) -&gt; <span class=\"built_in\">str</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;获取指定位置的天气预报。</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        latitude: 位置的纬度</span></span><br><span class=\"line\"><span class=\"string\">        longitude: 位置的经度</span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        格式化后的天气预报字符串</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 首先获取预报网格端点</span></span><br><span class=\"line\">    points_url = <span class=\"string\">f&quot;<span class=\"subst\">&#123;NWS_API_BASE&#125;</span>/points/<span class=\"subst\">&#123;latitude&#125;</span>,<span class=\"subst\">&#123;longitude&#125;</span>&quot;</span></span><br><span class=\"line\">    points_data = <span class=\"keyword\">await</span> make_nws_request(points_url)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 检查点数据是否获取成功</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> points_data:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;无法获取此位置的预报数据。&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 从点响应中获取预报URL</span></span><br><span class=\"line\">    forecast_url = points_data[<span class=\"string\">&quot;properties&quot;</span>][<span class=\"string\">&quot;forecast&quot;</span>]</span><br><span class=\"line\">    forecast_data = <span class=\"keyword\">await</span> make_nws_request(forecast_url)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 检查预报数据是否获取成功</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> forecast_data:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;无法获取详细预报。&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 将时间段格式化为可读的预报</span></span><br><span class=\"line\">    periods = forecast_data[<span class=\"string\">&quot;properties&quot;</span>][<span class=\"string\">&quot;periods&quot;</span>]</span><br><span class=\"line\">    forecasts = []</span><br><span class=\"line\">    <span class=\"comment\"># 只显示接下来的5个时间段</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> period <span class=\"keyword\">in</span> periods[:<span class=\"number\">5</span>]:</span><br><span class=\"line\">        forecast = <span class=\"string\">f&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">&#123;period[<span class=\"string\">&#x27;name&#x27;</span>]&#125;</span>:</span></span><br><span class=\"line\"><span class=\"string\">温度: <span class=\"subst\">&#123;period[<span class=\"string\">&#x27;temperature&#x27;</span>]&#125;</span>°<span class=\"subst\">&#123;period[<span class=\"string\">&#x27;temperatureUnit&#x27;</span>]&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">风力: <span class=\"subst\">&#123;period[<span class=\"string\">&#x27;windSpeed&#x27;</span>]&#125;</span> <span class=\"subst\">&#123;period[<span class=\"string\">&#x27;windDirection&#x27;</span>]&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">预报: <span class=\"subst\">&#123;period[<span class=\"string\">&#x27;detailedForecast&#x27;</span>]&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">        forecasts.append(forecast)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 用分隔符连接所有预报</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;\\n---\\n&quot;</span>.join(forecasts)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 程序入口点</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 初始化并运行服务器，使用stdio传输方式</span></span><br><span class=\"line\">    mcp.run(transport=<span class=\"string\">&#x27;stdio&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>配置到cline中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;weather&quot;: &#123;</span><br><span class=\"line\">    &quot;disabled&quot;: false,</span><br><span class=\"line\">    &quot;timeout&quot;: 60,</span><br><span class=\"line\">    &quot;command&quot;: &quot;uv&quot;,</span><br><span class=\"line\">    &quot;args&quot;: [</span><br><span class=\"line\">      &quot;--directory&quot;,</span><br><span class=\"line\">      &quot;E:/MCP/weather&quot;,</span><br><span class=\"line\">      &quot;run&quot;,</span><br><span class=\"line\">      &quot;weather.py&quot;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    &quot;transportType&quot;: &quot;stdio&quot;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>“disabled”: false 表示该服务是否被禁用。<code>false</code> 表示该服务是启用状态，可以正常运行。</p>\n<p>“timeout”: 60 设置该服务的超时时间，单位为秒。</p>\n<p>“command”: “uv” 指定执行该服务时使用的命令。</p>\n<p>“args” 出了执行 <code>command</code> 时需要传递的参数。</p>\n<p>“transportType”: “stdio” 指定服务的通信方式。<code>stdio</code> 表示标准输入输出流（Standard Input Output），通常用于进程间通信。</p></blockquote>\n<p>大部分的MCP server是通过输入输出与cline沟通的，如果MCP server是在终端启动的，那可以直接看到输入和输出，但是目前是有cline启动的，输入输出只有cline才能看到</p>\n<h1 id=\"相关资源\"><a href=\"#相关资源\" class=\"headerlink\" title=\"相关资源\"></a>相关资源</h1><p><a href=\"https://mcp.so/zh\">mcp.so</a></p>\n<p><a href=\"https://www.modelscope.cn/mcp\">魔搭MCP广场</a></p>\n<p><a href=\"https://sai.baidu.com/zh/\">百度搜索开放平台</a></p>\n<p><a href=\"https://www.bilibili.com/video/BV1uronYREWR?spm_id_from=333.788.videopod.sections&vd_source=bacf29bd4bb51f2ecf08a1ac7c7d8f11\">MCP b站视频</a></p>\n<p><a href=\"https://zxj-2023.github.io/2025/07/27/%E5%AD%A6%E4%B9%A0/mcp%E5%AD%A6%E4%B9%A0/MCP%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/\">MCP笔记</a></p>\n","text":"MCPFunction call 维度 Function Calling（FC） MCP（Model Context Protocol） 本质 能力 —— 某个...","permalink":"/post/MCP","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"AI","slug":"AI","count":2,"path":"api/categories/AI.json"}],"tags":[{"name":"MCP","slug":"MCP","count":1,"path":"api/tags/MCP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#MCP\"><span class=\"toc-text\">MCP</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Function-call\"><span class=\"toc-text\">Function call</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#MCP%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">MCP介绍</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#MCP%E4%BA%A4%E4%BA%92%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">MCP交互过程</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#MCP-%E7%9A%84%E6%9C%AC%E8%B4%A8\"><span class=\"toc-text\">MCP 的本质</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#MCP-%E4%B8%89%E7%A7%8D%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">MCP 三种传输协议</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAMCP-server\"><span class=\"toc-text\">创建一个MCP server</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">初始化项目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BB%BA%E7%AB%8B-weather-py\"><span class=\"toc-text\">建立 weather.py</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90\"><span class=\"toc-text\">相关资源</span></a></li></ol>","author":{"name":"GuoLiangWei","slug":"blog-author","avatar":"/img/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"fab fa-github","link":"https://github.com/guoliangwei2025"},"qq":{"icon":"fab fa-qq","link":"tencent://message/?uin=2691160140&Site=blog&Menu=yes"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"hot100题-哈希","uid":"fe35bb6acb69f6adf8c346c758bbeeb1","slug":"hot100题-哈希","date":"2025-08-29T01:37:39.000Z","updated":"2025-08-29T07:29:08.373Z","comments":true,"path":"api/articles/hot100题-哈希.json","keywords":"AI、Python","cover":null,"text":"两数之和（1） 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的数组下标...","permalink":"/post/hot100题-哈希","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"hot-100题","slug":"hot-100题","count":5,"path":"api/categories/hot-100题.json"}],"tags":[{"name":"hot100-哈希","slug":"hot100-哈希","count":1,"path":"api/tags/hot100-哈希.json"}],"author":{"name":"GuoLiangWei","slug":"blog-author","avatar":"/img/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"fab fa-github","link":"https://github.com/guoliangwei2025"},"qq":{"icon":"fab fa-qq","link":"tencent://message/?uin=2691160140&Site=blog&Menu=yes"}}}}},"next_post":{"title":"python相关","uid":"a8b6685f537d53566e24ad72a2e74fc5","slug":"python相关","date":"2025-08-28T01:48:06.000Z","updated":"2025-08-28T06:24:25.465Z","comments":true,"path":"api/articles/python相关.json","keywords":"AI、Python","cover":null,"text":"装饰器 ","permalink":"/post/python相关","photos":[],"count_time":{"symbolsCount":4,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"GuoLiangWei","slug":"blog-author","avatar":"/img/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"fab fa-github","link":"https://github.com/guoliangwei2025"},"qq":{"icon":"fab fa-qq","link":"tencent://message/?uin=2691160140&Site=blog&Menu=yes"}}}}}}