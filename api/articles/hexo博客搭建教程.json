{"title":"hexo博客搭建教程","uid":"7a072923df6718781f31165a7507480d","slug":"hexo博客搭建教程","date":"2025-08-24T05:44:09.000Z","updated":"2025-08-28T05:57:42.676Z","comments":true,"path":"api/articles/hexo博客搭建教程.json","keywords":"AI、Python","cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong><strong>初衷：</strong></strong></p>\n<p>我记得在<strong>刚上大三</strong>那会儿，想把自己学的一些东西<strong>记录到微信公众号</strong>上。刚开始坚持了几天，但是后来放弃了，因为大部分是<strong>Copy</strong>，也缺少<strong>自己的思考</strong>。</p>\n<p>经过最近的经历，我明白了一个道理：<strong>记录也是一个输出的过程</strong>。先<strong>自己理解</strong>，再把学习内容记录下来（记录适合自己学习或者找资料的过程），也是<strong>一种输出</strong>。</p>\n<p>所以，我决定从此开始，<strong>记录自己的过程</strong>，无论是：</p>\n<p><strong>技术学习</strong> 、<strong>碎碎念</strong>  、<strong>成长困惑</strong>  、<strong>考试学习</strong></p>\n<p>我想说，我可能<strong>走得很慢</strong>，但是我<strong>不会停下来</strong>，<strong>向内生长</strong>，加油!</p></blockquote>\n<h1 id=\"1-hexo介绍\"><a href=\"#1-hexo介绍\" class=\"headerlink\" title=\"1. hexo介绍\"></a>1. hexo介绍</h1><p>正如hexo的首页所显示的，它是一款非常快速，简介，高效的博客框架平台，我们可以利用hexo快速生成博客网站的模板，然后部署为我们自己的博客网站</p>\n<img src=\"/post/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/QQ_1756016937806.png\" class=\"\" title=\"img\">\n\n<h1 id=\"2-hexo教程\"><a href=\"#2-hexo教程\" class=\"headerlink\" title=\"2. hexo教程\"></a>2. hexo教程</h1><p>下面博客记录完整搭建的教程，比较简易，我就是根据这个教程来搭建的，简短的时间就可以搭建一个属于自己的博客。</p>\n<p>其中主要步骤包括：</p>\n<ul>\n<li>软件的安装如git、Nodejs</li>\n<li>hexo部署到Github</li>\n<li>hexo配置（如用户个人信息、头像、主题下载配置分类目录）</li>\n</ul>\n<p>配置好hexo以及主题之后就可以开始写个人博客了，常见的命令是 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo  clean             # 清除缓存文件和生成的静态文件</span><br><span class=\"line\">hexo  <span class=\"keyword\">new</span> <span class=\"string\">&quot;文章名称&quot;</span>     # 新建界面</span><br><span class=\"line\">hexo  generate          # 生成静态文件 可以简写成hexo g </span><br><span class=\"line\">hexo  server            # 启动服务器   可以简写hexo s</span><br><span class=\"line\">hexo  deploy            # 部署网站，构建在<span class=\"title class_\">GitHub</span>的服务器中，网页文件将上传到关联的个人仓库 可以简写成hexo d</span><br></pre></td></tr></table></figure>\n\n\n\n<p><a href=\"https://blog.csdn.net/jj6666djdbbd/article/details/129321783\">Hexo+Next部署github搭建个人博客+优化全过程（完整详细版）</a></p>\n<h1 id=\"3-hexo中图片上传问题\"><a href=\"#3-hexo中图片上传问题\" class=\"headerlink\" title=\"3. hexo中图片上传问题\"></a>3. hexo中图片上传问题</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>平时我们写文章可能会记录相关的图片，我个人也喜欢将别人写得好好理解的图片记录下来，但是在图片处理的过程中遇到一些问题（网上的方法各异，试了很多都不行），找了很多的教程，也是自己没有好好思考问题出在哪里，弄了很长时间，最后发现了相应的问题，仅以此记录我的处理方式。（参考CSDN并修改）</p></blockquote>\n<h2 id=\"Typora\"><a href=\"#Typora\" class=\"headerlink\" title=\"Typora\"></a>Typora</h2><p>安装Typora</p>\n<p><a href=\"https://blog.csdn.net/Tan2649441414/article/details/136028909\">Typora破解教程(破解序列号在评论区)</a></p>\n<p>​       修改Typora 偏好设置  如下图更改，此操作将图片文件保存路径: .&#x2F;${filename} 即保存到与 当前正在编辑的文件名相同的同级文件</p>\n<img src=\"/post/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/QQ_1756018484270.png\" class=\"\" title=\"img\">\n\n<h2 id=\"修改hexo配置\"><a href=\"#修改hexo配置\" class=\"headerlink\" title=\"修改hexo配置\"></a>修改hexo配置</h2><p>修改_config.yml中的post_asset_folder，false 改为 true，这样修改后，每次 hexo new page生成新文章，都会在文章文件同级目录创建一个与文章文件名同名的文件夹，我们就在这里存放此文章的图片</p>\n<p><strong>注：在md文档中存放的路径为<code>文件夹/图片名称 </code></strong> </p>\n<p>之前找到有一种方式自定义安装一个插件，将md文档中的路径进行转换，第一天可以，但是第二天就不可以，找了很多办法，还是借助AI写了一个脚本实现相应的功能</p>\n<img src=\"/post/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/QQ_1756018626285.png\" class=\"\" title=\"img\">\n\n\n\n<img src=\"/post/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/QQ_1756018766743.png\" class=\"\" title=\"img\">\n\n<h2 id=\"具体实现\"><a href=\"#具体实现\" class=\"headerlink\" title=\"具体实现\"></a>具体实现</h2><p>以下是在 hexo 中实现：Markdown 写 <code>文件夹/图片名称</code> 也能自动到相对应文章资源文件夹并生成 <code>&#123;% asset_img %&#125;</code> 标签。（使用插件进行实现）</p>\n<h3 id=\"创建文件夹\"><a href=\"#创建文件夹\" class=\"headerlink\" title=\"创建文件夹\"></a>创建文件夹</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> hexo-asset-img</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hexo-asset-img</span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编写插件index-js\"><a href=\"#编写插件index-js\" class=\"headerlink\" title=\"编写插件index.js\"></a>编写插件index.js</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * md文件返回 true</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">*</span>&#125; data </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ignore</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> 好奇怪，试了一下, md返回true, 但却需要忽略 取反!</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> source = data.<span class=\"property\">source</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ext = source.<span class=\"title function_\">substring</span>(source.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;.&#x27;</span>)).<span class=\"title function_\">toLowerCase</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"string\">&#x27;md&#x27;</span>,].<span class=\"title function_\">indexOf</span>(ext) &gt; -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">action</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> reverseSource = data.<span class=\"property\">source</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;&quot;</span>).<span class=\"title function_\">reverse</span>().<span class=\"title function_\">join</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> fileName = reverseSource.<span class=\"title function_\">substring</span>(<span class=\"number\">3</span>, reverseSource.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;/&quot;</span>)).<span class=\"title function_\">split</span>(<span class=\"string\">&quot;&quot;</span>).<span class=\"title function_\">reverse</span>().<span class=\"title function_\">join</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ![example](postname/example.jpg)  --&gt;  &#123;% asset_img example.jpg example %&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> regExp = <span class=\"title class_\">RegExp</span>(<span class=\"string\">&quot;!\\\\[(.*?)\\\\]\\\\(&quot;</span> + fileName + <span class=\"string\">&#x27;/(.+?)\\\\)&#x27;</span>, <span class=\"string\">&quot;g&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// hexo g</span></span><br><span class=\"line\">    data.<span class=\"property\">content</span> = data.<span class=\"property\">content</span>.<span class=\"title function_\">replace</span>(regExp, <span class=\"string\">&quot;&#123;% asset_img $2 $1 %&#125;&quot;</span>,<span class=\"string\">&quot;g&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// log.info(`hexo-asset-img: filename: $&#123;fileName&#125;, title: $&#123;data.title.trim()&#125;`);</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">filter</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;before_post_render&#x27;</span>,<span class=\"function\">(<span class=\"params\">data</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_\">ignore</span>(data))&#123;</span><br><span class=\"line\">        <span class=\"title function_\">action</span>(data)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"本地测试插件\"><a href=\"#本地测试插件\" class=\"headerlink\" title=\"本地测试插件\"></a>本地测试插件</h3><ol>\n<li><p>Hexo 根目录下 <code>package.json</code> 中 dependencies 添加一行 <code>&quot;hexo-asset-img&quot;: &quot;^1.0.0&quot;</code>, </p>\n</li>\n<li><p>将 <code>hexo-asset-img</code> 文件夹复制到 Hexo 根目录下 <code>node_modules</code> 文件夹下 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   hexo clean &amp;&amp; hexo g</span><br><span class=\"line\">   hexo s <span class=\"comment\"># 本地预览</span></span><br><span class=\"line\">   <span class=\"comment\">#编译后的文件在public文件夹下</span></span><br><span class=\"line\"></span><br><span class=\"line\">Markdown 图片写法</span><br><span class=\"line\"></span><br><span class=\"line\">在 Markdown 里可以写带文件夹的图片：</span><br><span class=\"line\"></span><br><span class=\"line\">```markdown</span><br><span class=\"line\">![示例](demo/demo.png)</span><br><span class=\"line\">![另一张](<span class=\"built_in\">test</span>/other.png)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>图片相对路径是相对于 <strong>Markdown 文件所在目录</strong>。</p></blockquote>\n<h1 id=\"4-Netlify部署\"><a href=\"#4-Netlify部署\" class=\"headerlink\" title=\"4.Netlify部署\"></a>4.Netlify部署</h1><p><a href=\"https://blog.csdn.net/Calvin_zhou/article/details/109447074\">Netlify部署方法</a></p>\n<h1 id=\"5-相关资料\"><a href=\"#5-相关资料\" class=\"headerlink\" title=\"5. 相关资料\"></a>5. 相关资料</h1><p><a href=\"https://moeci.com/posts/hexo-typora/#%F0%A0%9B%85%F0%A4%B7%89%F0%A0%9B%85%F0%AB%A9%A6%F0%A1%B4%9A%F0%AA%A0%96%F0%A6%8E%A4\">插件方法</a> （插件方法可行）</p>\n","text":" 初衷： 我记得在刚上大三那会儿，想把自己学的一些东西记录到微信公众号上。刚开始坚持了几天，但是后来放弃了，因为大部分是Copy，也缺少自己的思考。 经过最近的...","permalink":"/post/hexo博客搭建教程","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"博客搭建教程","slug":"博客搭建教程","count":1,"path":"api/categories/博客搭建教程.json"}],"tags":[{"name":"博客搭建教程","slug":"博客搭建教程","count":1,"path":"api/tags/博客搭建教程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-hexo%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1. hexo介绍</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-hexo%E6%95%99%E7%A8%8B\"><span class=\"toc-text\">2. hexo教程</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-hexo%E4%B8%AD%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">3. hexo中图片上传问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Typora\"><span class=\"toc-text\">Typora</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9hexo%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">修改hexo配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">具体实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9\"><span class=\"toc-text\">创建文件夹</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99%E6%8F%92%E4%BB%B6index-js\"><span class=\"toc-text\">编写插件index.js</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">本地测试插件</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-Netlify%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">4.Netlify部署</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99\"><span class=\"toc-text\">5. 相关资料</span></a></li></ol>","author":{"name":"GuoLiangWei","slug":"blog-author","avatar":"/img/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"LangChain","uid":"0d43d0f6b5521a4904839727c6757d0b","slug":"LangChain","date":"2025-08-25T02:23:50.000Z","updated":"2025-08-26T08:06:10.839Z","comments":true,"path":"api/articles/LangChain.json","keywords":"AI、Python","cover":[],"text":" 本篇文章主要介绍LangChain基础语法，RAG原理，以及使用LangChain实现简易的RAG系统，详细的RAG优化以及类型在另外的文章进行介绍 1.La...","permalink":"/post/LangChain","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"Langchain","slug":"Langchain","count":1,"path":"api/categories/Langchain.json"}],"tags":[{"name":"AI","slug":"AI","count":2,"path":"api/tags/AI.json"}],"author":{"name":"GuoLiangWei","slug":"blog-author","avatar":"/img/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"transformer学习","uid":"6d545ad0d2ef8e06091f61b2fdd30512","slug":"transformer学习","date":"2025-08-23T07:59:03.000Z","updated":"2025-08-24T01:55:50.869Z","comments":true,"path":"api/articles/transformer学习.json","keywords":"AI、Python","cover":[],"text":"Transformer1. Transformer 主要结构及对比 RNN编码器（Encoder）编码器由多个相同的编码器层堆叠而成，每一层包含以下部分： 多头...","permalink":"/post/transformer学习","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"transformer","slug":"transformer","count":1,"path":"api/categories/transformer.json"}],"tags":[{"name":"AI","slug":"AI","count":2,"path":"api/tags/AI.json"}],"author":{"name":"GuoLiangWei","slug":"blog-author","avatar":"/img/logo.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}